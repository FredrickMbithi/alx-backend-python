name: CI - Tests, Lint, Coverage

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: messaging_db
          MYSQL_USER: messaging_user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      DJANGO_SETTINGS_MODULE: messaging_app.settings
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 3306
      DATABASE_NAME: messaging_db
      DATABASE_USER: messaging_user
      DATABASE_PASSWORD: password

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f messaging_app/requirements.txt ]; then python -m pip install -r messaging_app/requirements.txt; fi
          python -m pip install pytest pytest-django flake8 coverage

      - name: Lint with flake8
        run: |
          flake8 messaging_app

      - name: Run tests with coverage
        run: |
          # Wait for MySQL to be ready (if tests use it)
          for i in {1..30}; do mysqladmin ping -h 127.0.0.1 -P 3306 --silent && break || sleep 1; done
          coverage run -m pytest messaging_app --junitxml=reports/report.xml || true

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: reports/report.xml

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml
