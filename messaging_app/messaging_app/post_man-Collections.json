{
  "info": {
    "name": "Messaging App API",
    "description": "Complete API collection for Django Messaging App with JWT Authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "conversation_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "message_id",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"testpassword123\",\n  \"password_confirm\": \"testpassword123\",\n  \"first_name\": \"Test\",\n  \"last_name\": \"User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register/",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access);",
                  "    pm.collectionVariables.set('refresh_token', response.refresh);",
                  "    pm.collectionVariables.set('user_id', response.user_id);",
                  "    pm.test('User registered successfully', function () {",
                  "        pm.response.to.have.status(201);",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"testpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login/",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access);",
                  "    pm.collectionVariables.set('refresh_token', response.refresh);",
                  "    pm.collectionVariables.set('user_id', response.user_id);",
                  "    pm.test('Login successful', function () {",
                  "        pm.response.to.have.status(200);",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/token/refresh/",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "token", "refresh", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access);",
                  "    pm.test('Token refreshed successfully', function () {",
                  "        pm.response.to.have.status(200);",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Conversations",
      "item": [
        {
          "name": "Create Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"participant_ids\": [2, 3]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/chats/conversations/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "conversations", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('conversation_id', response.id);",
                  "    pm.test('Conversation created successfully', function () {",
                  "        pm.response.to.have.status(201);",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "List Conversations",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chats/conversations/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "conversations", ""]
            }
          }
        },
        {
          "name": "Get Conversation Detail",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chats/conversations/{{conversation_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "conversations", "{{conversation_id}}", ""]
            }
          }
        },
        {
          "name": "Filter Conversations by Participant",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chats/conversations/?participant=2",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "conversations", ""],
              "query": [
                {
                  "key": "participant",
                  "value": "2"
                }
              ]
            }
          }
        },
        {
          "name": "Add Participant to Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": 4\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/chats/conversations/{{conversation_id}}/add_participant/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "conversations", "{{conversation_id}}", "add_participant", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Messages",
      "item": [
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"conversation\": {{conversation_id}},\n  \"message_body\": \"Hello! This is a test message.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/chats/messages/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "messages", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('message_id', response.id);",
                  "    pm.test('Message sent successfully', function () {",
                  "        pm.response.to.have.status(201);",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "List Messages",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chats/messages/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "messages", ""]
            }
          }
        },
        {
          "name": "Get Messages in Conversation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chats/conversations/{{conversation_id}}/messages/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "conversations", "{{conversation_id}}", "messages", ""]
            }
          }
        },
        {
          "name": "Filter Messages by Content",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chats/messages/?content=test",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "messages", ""],
              "query": [
                {
                  "key": "content",
                  "value": "test"
                }
              ]
            }
          }
        },
        {
          "name": "Filter Messages by Date Range",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chats/messages/?created_today=true",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "messages", ""],
              "query": [
                {
                  "key": "created_today",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Update Message",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message_body\": \"Updated message content\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/chats/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "messages", "{{message_id}}", ""]
            }
          }
        },
        {
          "name": "Delete Message",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{base_url}}/api/chats/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "messages", "{{message_id}}", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chats/users/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "users", ""]
            }
          }
        },
        {
          "name": "Search Users",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chats/users/?search=test",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "users", ""],
              "query": [
                {
                  "key": "search",
                  "value": "test"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Unauthorized Access Tests",
      "item": [
        {
          "name": "Access Conversations Without Token",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/chats/conversations/",
              "host": ["{{base_url}}"],
              "path": ["api", "chats", "conversations", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Access denied without authentication', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}